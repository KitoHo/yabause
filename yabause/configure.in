dnlAC_INIT(src/yabause.cc)
AC_INIT(yabause, 0.5)

AC_CANONICAL_HOST
AC_CANONICAL_TARGET

case $target in
	*darwin*) yabause_arch=macosx;;
	*linux*) yabause_arch=linux;;
	*cygwin*) yabause_arch=windows;;
	*mingw32*) yabause_arch=.;;
	*freebsd*) yabause_arch=freebsd;;
	*) yabause_arch=".";;
esac
AC_SUBST(yabause_arch)

AM_INIT_AUTOMAKE(yabause, 0.5)

AC_PROG_CC
AC_PROG_INSTALL

AC_LANG(C)

AC_C_BIGENDIAN

AC_PATH_PROGS(HAVE_LIBSDL, [sdl-config sdl11-config])

if test x$HAVE_LIBSDL = x ; then
	AC_MSG_ERROR([You need to install SDL])
else
	SDL_CFLAGS=`$HAVE_LIBSDL --cflags`
	SDL_LIBS=`$HAVE_LIBSDL --libs`
fi

YAB_CFLAGS="$YAB_CFLAGS $SDL_CFLAGS"
YAB_LIBS="$YAB_LIBS $SDL_LIBS"

case $target in
	*darwin*)
		YAB_LIBS="$YAB_LIBS $SDL_LIBS -framework IOKit -framework CoreFoundation -framework GLUT"
		yabause_yui="."
		;;
	*cygwin*)
		YAB_LIBS="$YAB_LIBS -lopengl32 -lglut32"
		yabause_yui="."
		;;
	*mingw32*)
		YAB_LIBS="$YAB_LIBS -lopengl32 -lglut32"
		yabause_yui="."
		;;
	*linux* | *freebsd*)
		AC_PATH_XTRA
		YAB_LIBS="$YAB_LIBS $X_LIBS"
		YAB_CFLAGS="$YAB_CFLAGS $X_CFLAGS"
		AC_CHECK_LIB(GL, glEnable, [
			YAB_LIBS="$YAB_LIBS -lGL"
			AC_DEFINE(HAVE_LIBGL)
			], [AC_MSG_ERROR("You need to install OpenGL") ])
		AC_CHECK_LIB(glut, glutGetModifiers,[
			YAB_LIBS="$YAB_LIBS -lglut"
			AC_DEFINE(HAVE_LIBGLUT)])
		yabause_yui="."
		;;
	*) 
		AC_CHECK_LIB(GL, glEnable, [], [AC_MSG_ERROR("You need to install OpenGL") ])
		AC_CHECK_LIB(glut, glutGetModifiers)
		yabause_yui="."
		;;

esac

AC_ARG_WITH(gtk, AC_HELP_STRING(--with-gtk, use a gtk interface), [use_gtk=$withval], [use_gtk=no])

if test x$use_gtk = xyes ; then
	AC_CHECK_TOOL(HAVE_PKG, pkg-config)

	if test ! x$HAVE_PKG = x ; then
		yabause_yui="linux"
		GTK_CFLAGS=`$HAVE_PKG gtk+-2.0 --cflags`
		GTK_LIBS=`$HAVE_PKG gtk+-2.0 --libs`
	fi
fi

AC_SUBST(yabause_yui)

YAB_CFLAGS="$YAB_CFLAGS $GTK_CFLAGS"
YAB_LIBS="$YAB_LIBS $GTK_LIBS"
AC_SUBST(YAB_CFLAGS)
AC_SUBST(YAB_LIBS)

AC_ARG_ENABLE(debug, AC_HELP_STRING(--enable-debug, enable general debug information) , AC_DEFINE(DEBUG))
AC_ARG_ENABLE(vdp1-debug, AC_HELP_STRING(--enable-vdp1-debug, enable vdp1 debug information) , AC_DEFINE(VDP1_DEBUG))
AC_ARG_ENABLE(vdp2-debug, AC_HELP_STRING(--enable-vdp2-debug, enable vdp2 debug information) , AC_DEFINE(VDP2_DEBUG))
AC_ARG_ENABLE(cd-debug, AC_HELP_STRING(--enable-cd-debug, enable cdblock debug information) , AC_DEFINE(CDDEBUG))

AC_CONFIG_FILES([Makefile src/Makefile doc/Makefile src/freebsd/Makefile src/linux/Makefile src/c68k/Makefile])
AC_OUTPUT
